# Publish a release to PyPI.
#
name: "Publish to PyPI"

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-wheels-linux:
    name: Build Linux Wheels
    runs-on: ubuntu-latest 
    container:
      image: quay.io/pypa/manylinux_2_34_x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: "Install uv"
        uses: astral-sh/setup-uv@v6
      - name: "Build wheels"
        run: |
          uv build --python 3.14t --wheel
          uv build --python 3.14 --wheel --sdist
          uv build --python 3.13 --wheel 
          uv build --python 3.12 --wheel
          uv build --python 3.11 --wheel
          uv build --python 3.10 --wheel
          uv build --python 3.9 --wheel
      - name: Repair wheels with auditwheel
        run: |
          for wheel in dist/*.whl; do
            uvx auditwheel repair "$wheel" --plat manylinux_2_34_x86_64 -w dist/
          done
          rm -f dist/*linux_x86_64.whl
      - name: Upload Linux Wheels to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux 
          path: dist/
          retention-days: 1

  build-wheels-windows:
    name: Build Windows Wheels
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Activate MSVC Build Tools
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: "Build wheels"
        run: |
          uv build --python 3.14t --wheel
          uv build --python 3.14 --wheel
          uv build --python 3.12 --wheel
          uv build --python 3.11 --wheel
          uv build --python 3.10 --wheel
          uv build --python 3.9 --wheel
      - name: Upload Windows Wheels to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: dist/
          retention-days: 1

  build-wheels-macos:
    name: Build macOS Wheels
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # macOS必须：安装Xcode命令行工具（Cython扩展编译依赖）
      - name: Install Xcode CLI Tools
        run: xcode-select --install || true  # 已安装则忽略

      # # macOS必须：设置最低兼容版本（支持macOS 10.15+）
      # - name: Set macOS Deployment Target
      #   run: echo "MACOSX_DEPLOYMENT_TARGET=10.15" >> $GITHUB_ENV

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: "Build wheels"
        run: |
          uv build --python 3.14t --wheel
          uv build --python 3.14 --wheel
          uv build --python 3.12 --wheel
          uv build --python 3.11 --wheel
          uv build --python 3.10 --wheel
          uv build --python 3.9 --wheel

      - name: Upload macOS Wheels to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: dist/
          retention-days: 1


  publish-all-to-pypi:
    name: Publish All Wheels to PyPI
    runs-on: ubuntu-latest
    needs: [build-wheels-linux, build-wheels-windows, build-wheels-macos]
    environment:
      name: release
    permissions:
      id-token: write  # PyPI可信发布必需权限
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download All Built Wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      - name: Verify All Wheels
        run: |
          echo "All wheels in dist/:"
          ls -l dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Publish All Wheels to PyPI
        run: uv publish  # 自动上传dist/下所有轮子（Linux+Win+Mac）和sdist